/* eslint-disable prettier/prettier */

import { AbiCoder } from "ethers"
import hardhat from "hardhat"
const proof =""
describe("Arbi Verifier", () => {

    it.only("test", async () => {
        /**
         * Prepate mock inbox
         */
        const outboxF = await hardhat.ethers.getContractFactory("MockOutbox")
        const mockOutbox = await outboxF.deploy()



        await mockOutbox.pushRoot(
            "0x47ee108ea84e6f85c2749e942ee3d5d6a2cc5ef81f3b5c651c0f3c1b472bd645",
            "0x913ac55af774e541d9c787428951598010fc41cacf2b9e97a924c7eff7d10fc5",
        )

        /**
         * Deploy verifier
         */

        const f = await hardhat.ethers.getContractFactory("ArbVerifier")
        const arbiVerfifier = await f.deploy(await mockOutbox.getAddress(), ["d"])

        /**
         * Deploy MockTestL1
         */

        const testL2OnArbi = "0x2161d46ad2b7dd9c9f58b8be0609198899fb431d"

        const fMockTest = await hardhat.ethers.getContractFactory("MockTestL1")
        const mockTestL1 = await fMockTest.deploy(await arbiVerfifier.getAddress(), testL2OnArbi)

        const [, , commands, , constants] = await mockTestL1.getLatest()



        const res = await arbiVerfifier.getStorageValues(testL2OnArbi, [...commands], [...constants], proof)

    })
})